//
//  User.swift
//  Async_Await_Networking
//
//  Created by Rashad Abdul-Salam on 7/21/23.
//

import Foundation


/**
 CONTENT STRUCTURE
 
 
 List
 Data structure for all responses that return array of data.
 In case you get single item your will get it directly.

 {
 data: Array(Model)
 total: number(total items in DB)
 page: number(current page)
 limit: number(number of items on page)
 }
 User Preview
 User as a part of list or other data like post/comment.
 {
 id: string(autogenerated)
 title: string("mr", "ms", "mrs", "miss", "dr", "")
 firstName: string(length: 2-50)
 lastName: string(length: 2-50)
 picture: string(url)
 }
 User Full
 Full user data returned by id.
 {
 id: string(autogenerated)
 title: string("mr", "ms", "mrs", "miss", "dr", "")
 firstName: string(length: 2-50)
 lastName: string(length: 2-50)
 gender: string("male", "female", "other", "")
 email: string(email)
 dateOfBirth: string(ISO Date - value: 1/1/1900 - now)
 registerDate: string(autogenerated)
 phone: string(phone number - any format)
 picture: string(url)
 location: object(Location)
 }
 Location
 Using only as a part of full user data.
 {
 street: string(length: 5-100)
 city: string(length: 2-30)
 state: string(length: 2-30)
 country: string(length: 2-30)
 timezone: string(Valid timezone value ex. +7:00, -1:00)
 }
 Post Create
 Post data for create request.
 {
 text: string(length: 6-50, preview only)
 image: string(url)
 likes: number(init value: 0)
 tags: array(string)
 owner: string(User id)
 }
 Post Preview
 Post data as a part of list.
 {
 id: string(autogenerated)
 text: string(length: 6-50, preview only)
 image: string(url)
 likes: number(init value: 0)
 tags: array(string)
 publishDate: string(autogenerated)
 owner: object(User Preview)
 }
 Post
 Post data returned by id.
 {
 id: string(autogenerated)
 text: string(length: 6-1000)
 image: string(url)
 likes: number(init value: 0)
 link: string(url, length: 6-200)
 tags: array(string)
 publishDate: string(autogenerated)
 owner: object(User Preview)
 }
 Comment Create
 Comment data to create new item.
 {
 message: string(length: 2-500)
 owner: string(User Id)
 post: string(Post Id)
 }
 Comment
 {
 id: string(autogenerated)
 message: string(length: 2-500)
 owner: object(User Preview)
 post: string(Post Id)
 publishDate: string(autogenerated)
 }
 
 */


struct User: Codable {
  let name: String?
  let director: String?
  let cast: [String]
  let genres: Genre?
}

struct UserPreview: Codable, Hashable {
   let id: String
   let title: String
   let firstName: String
   let lastName: String
   let picture: String
    
}

struct UserListData: Codable {
    static let mockUsers: [UserPreview] = [
        UserPreview(id: "60d0fe4f5311236168a109ca",
                    title: "ms",
                    firstName: "Sara",
                    lastName: "Andersen",
                    picture: "https://randomuser.me/api/portraits/women/58.jpg")
                ,
                UserPreview(
                   id: "60d0fe4f5311236168a109cb",
                   title: "miss",
                   firstName: "Edita",
                   lastName: "Vestering",
                   picture: "https://randomuser.me/api/portraits/med/women/89.jpg"
                ),
                UserPreview(
                   id: "60d0fe4f5311236168a109cc",
                   title: "ms",
                   firstName: "Adina",
                   lastName: "Barbosa",
                   picture: "https://randomuser.me/api/portraits/med/women/28.jpg"
                ),
                UserPreview(
                    id: "60d0fe4f5311236168a109cd",
                    title: "mr",
                    firstName: "Roberto",
                    lastName: "Vega",
                    picture: "https://randomuser.me/api/portraits/med/men/25.jpg"
                ),
                UserPreview(
                   id: "60d0fe4f5311236168a109ce",
                   title: "mr",
                   firstName: "Rudi",
                   lastName: "Droste",
                   picture: "https://randomuser.me/api/portraits/med/men/83.jpg"
                ),
                UserPreview(
                    id: "60d0fe4f5311236168a109cf",
                    title: "mrs",
                    firstName: "Carolina",
                    lastName: "Lima",
                    picture: "https://randomuser.me/api/portraits/med/women/5.jpg"
                ),
                UserPreview(
                    id: "60d0fe4f5311236168a109d0",
                    title: "mr",
                    firstName: "Emre",
                    lastName: "Asikoglu",
                    picture: "https://randomuser.me/api/portraits/med/men/23.jpg"
                ),
                UserPreview(
                    id: "60d0fe4f5311236168a109d1",
                    title: "mr",
                    firstName: "Kent",
                    lastName: "Brewer",
                    picture: "https://randomuser.me/api/portraits/med/men/52.jpg"
                ),
                UserPreview(
                    id: "60d0fe4f5311236168a109d2",
                    title: "mr",
                    firstName: "Evan",
                    lastName: "Carlson",
                    picture: "https://randomuser.me/api/portraits/med/men/80.jpg"
                ),
                UserPreview(
                    id: "60d0fe4f5311236168a109d3",
                    title: "mr",
                    firstName: "Friedrich-Karl",
                    lastName: "Brand",
                    picture: "https://randomuser.me/api/portraits/med/men/7.jpg"
                )
    
    ]
    let data: [UserPreview]
}
